{"version":3,"sources":["app/utils/persistence.ts","app/utils/util.ts","app/components/ReminderCol.tsx","app/components/BabyDataRow.tsx","app/store/actions.ts","app/components/EditBaby/component.tsx","app/components/EditBaby/index.ts","app/components/BabiesDataTable/component.tsx","app/components/BabiesDataTable/index.ts","app/App.tsx","serviceWorker.ts","app/store/reducer.ts","app/store/index.ts","index.tsx"],"names":["PERSISTENCE_CODES","BABIES","REMINDERS","Storage","prototype","setObj","key","obj","this","setItem","JSON","stringify","getObj","parse","getItem","e","initData","localStorage","prompt","alert","babiesWithReminders","babiesJSON","map","b","name","birthdate","util","stringToDate","seenReminders","remindersJSON","getBabies","babies","length","Date","saveBabies","getReminders","reminders","r","id","persistence","getAgeInMonths","birthday","today","getFullYear","getMonth","getReminderForAge","ageInMonths","indexOfSmallestRangeReminder","reduce","accum","currReminder","i","smallestRange","Math","min","months","getJsonFromUrl","url","window","location","search","query","substr","result","split","forEach","part","item","nextURIComponent","decodeURIComponent","parseInt","isNaN","TypeError","paramsObjToUrl","params","Object","keys","paramKey","join","getBabiesWithRemindersObj","baby","reminderId","str","sep","parts","day","toFixed","month","year","ReminderCol","props","reminder","isSeen","onClick","className","data-id","React","Component","BabyDataRow","babyId","onReminderClick","nextReminder","isReminderSeen","includes","toDateString","ACTION_TYPES","INIT_BABIES","ADD_REMINDER","REMOVE_REMINDER","EditBabyComponent","fields","handleSubmit","isSeenChecked","state","updateReminder","closeModal","onClose","labels","values","toISOString","slice","value","label","isOpen","Dialog","aria-labelledby","open","onSubmit","DialogTitle","DialogContent","DialogContentText","f","TextField","margin","type","variant","inputProps","readOnly","disabled","color","fullWidth","FormControlLabel","control","Checkbox","autoFocus","checked","onChange","target","setState","DialogActions","Button","connect","ownProps","pickedBabyReminder","dispatch","payload","addReminder","removeReminder","BabiesDataTableComponent","onReminderChoose","style","fontSize","EditBaby","App","BabiesDataTable","dir","Boolean","hostname","match","DEFAULT_STATE","reducer","combineReducers","action","elm","filter","persistedState","store","createStore","applyMiddleware","logger","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbf4e119.chunk.js","sourcesContent":["import { Baby, Reminder } from \"../interfaces\"\nimport util from './util';\nimport babiesJSON from '../resources/babies.json'\nimport remindersJSON from '../resources/reminders.json'\n\nexport const PERSISTENCE_CODES = {\n\tBABIES: 'BABIES',\n\tREMINDERS: 'REMINDERS'\n}\n\nStorage.prototype.setObj = function(key: string, obj: Reminder | Baby) {\n\treturn this.setItem(key, JSON.stringify(obj))\n}\n\nStorage.prototype.getObj = function(key: string) {\n\ttry {\n\t\treturn JSON.parse(this.getItem(key) as string);\n\t}  catch(e) {\n\t\t// getItem didn't return string\n\t\treturn null;\n\t}\n}\n\nfunction initData() {\n\tconst isDataExists = !!localStorage.getObj(PERSISTENCE_CODES.REMINDERS);\n\n\tif (isDataExists) return;\n\n\t// Password protection (only if data doesn't exsists)\n\tvar person = prompt(\"שם משתמש:\", \"\");\n\tif (person !== \"אורי\") {\n\t\talert('אין לך גישה לאפליקציה. \\nרענן לניסיון נוסף');\n\t\treturn;\n\t} else {\n\t\talert('ברוכה הבאה! להבא לא תצטרכי להקיש הסיסמה :)')\n\t}\n\n\tconst babiesWithReminders = babiesJSON.map(b => ({\n\t\tname: b.name,\n\t\tbirthdate: util.stringToDate(b.birthdate),\n\t\tseenReminders: []\n\t}));\n\n\tlocalStorage.setObj(PERSISTENCE_CODES.REMINDERS, remindersJSON);\n\tlocalStorage.setObj(PERSISTENCE_CODES.BABIES, babiesWithReminders);\n}\n\nfunction getReminders(): Reminder[] {\n\tconst reminders: any[] = localStorage.getObj(PERSISTENCE_CODES.REMINDERS);\n\n\tif (!reminders || !reminders.length) return [];\n\n\treturn reminders.map((r, id) => ({...r, id}))\n}\n\nfunction getBabies(): Baby[] {\n\tconst babies: any[] = localStorage.getObj(PERSISTENCE_CODES.BABIES);\n\t\n\tif (!babies || !babies.length) return [];\n\t\n\treturn babies.map((b) => ({...b, birthdate: new Date(b.birthdate)}));\n}\n\nfunction saveBabies(babies: Baby[]) {\n\tlocalStorage.setObj(PERSISTENCE_CODES.BABIES, babies);\n}\n\nexport default {\n\tinitData,\n\tgetBabies,\n\tsaveBabies,\n\tgetReminders,\n\tpersistence: localStorage\n};","import { Reminder, Baby, BabyWithRemindersObj } from \"../interfaces\";\nimport persistence from \"./persistence\";\n\nexport function getJsonFromUrl(url?: string) {\n  if(!url) url = window.location.search;\n  var query = url.substr(1);\n  var result: any = {};\n  query.split(\"&\").forEach(function(part: string) {\n\t\tvar item = part.split(\"=\");\n\t\tconst nextURIComponent = decodeURIComponent(item[1]);\n\t\t// Try to parse to int.\n\t\ttry {\n\t\t\tresult[item[0]] = parseInt(nextURIComponent);\n\t\t\tif (isNaN(result[item[0]])) throw new TypeError('NaN');\n\t\t} catch(e) {\n\t\t\tresult[item[0]] = nextURIComponent;\n\t\t}\n  });\n  return result;\n}\n\nexport function paramsObjToUrl(params: any) {\n\treturn (Object.keys(params).map((paramKey) => `${paramKey}=${params[paramKey]}`).join('&'));\n}\n\nexport const getAgeInMonths = (birthday: Date) => {\n\tconst today = new Date();\n\n\tconst years = today.getFullYear() - birthday.getFullYear();\n\tconst months = today.getMonth() - birthday.getMonth();\n\n\tconst ageInMonths = years * 12 + months;\n\n\treturn (ageInMonths);\n}\n\nexport const getReminderForAge = (ageInMonths: number) => {\n\tconst reminders: Reminder[] = persistence.getReminders();\n\tlet indexOfSmallestRangeReminder = -1;\n\n\treminders.reduce((accum, currReminder: Reminder, i) => {\n\t\t// Notice we want to get the min range from future reminders.\n\t\t// At this point, we don't care about past reminders.\n\t\tconst smallestRange = Math.min(accum, currReminder.months - ageInMonths);\n\t\tif (smallestRange >= 0 && smallestRange < accum) {\n\t\t\tindexOfSmallestRangeReminder = i;\n\t\t\treturn (smallestRange);\n\t\t}\n\n\t\treturn (accum)\n\n\t}, Math.min());\n\n\tif (indexOfSmallestRangeReminder < 0) {\n\t\t// Can't found future event\n\t\treturn (null)\n\t}\n\n\treturn reminders[indexOfSmallestRangeReminder];\n}\n\nexport function getBabiesWithRemindersObj(): BabyWithRemindersObj[] {\n\tconst babies: Baby[] = persistence.getBabies();\n\tconst reminders: Reminder[] = persistence.getReminders();\n\n\tif (!babies || !babies.length) {\n\t\treturn [];\n\t}\n\n\treturn babies.map(baby => ({\n\t\t...baby,\n\t\tseenReminders: baby.seenReminders.map(reminderId => reminders[reminderId])\n\t}));\n}\n\nconst stringToDate = (str: string, sep: string = '.'): Date => {\n\tconst parts = str.split(sep);\n\tconst day = parseInt(parts[1]).toFixed(2);\n\tconst month = parseInt(parts[1]).toFixed(2);\n\tconst year = '20' + parts[2];\n\n\treturn new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n}\n\n\nexport default {\n\tgetJsonFromUrl,\n\tparamsObjToUrl,\n\tgetAgeInMonths,\n\tgetReminderForAge,\n\tgetBabiesWithRemindersObj,\n\tstringToDate\n}","import React from 'react';\nimport { Reminder } from '../interfaces';\nimport { paramsObjToUrl } from '../utils/util';\nimport { EDIT_FORM_URL } from '../utils/constants';\n\ninterface Props {\n\treminder: Reminder;\n\tisSeen: boolean;\n\tbabyId: number;\n\tonClick: (ev: any) => void\n};\n\nexport class ReminderCol extends React.Component<Props, {}> {\n\n\trender() {\n\t\tconst {reminder, isSeen, onClick} = this.props;\n\t\tconst isReminder = !!reminder;\n\n\t\treturn (\n\t\t\tisReminder ? \n\t\t\t<td onClick={onClick} className={`reminder_td ${isSeen ? 'seen' : ''}`} data-id={reminder.id}>\n\t\t\t\t{reminder.name}\n\t\t\t</td> :\n\t\t\t<td onClick={() => alert('אין כאן תזכורת הניתנת לעריכה :)')}>\n\t\t\t\t-\n\t\t\t</td>\n\t\t);\n\t}\n}","import React from 'react';\nimport { Reminder, Baby } from '../interfaces';\nimport { getReminderForAge, getAgeInMonths } from '../utils/util';\nimport { ReminderCol } from './ReminderCol';\n\ninterface Props {\n\tbaby: Baby;\n\tid: number;\n\tonReminderClick: (reminderId: number, babyId: number) => void\n};\n\n\nexport class BabyDataRow extends React.Component<Props, {}> {\n\n\trender() {\n\t\tconst { baby, id: babyId, onReminderClick } = this.props;\n\t\tconst ageInMonths = getAgeInMonths(baby.birthdate);\n\t\tconst nextReminder = getReminderForAge(ageInMonths) as Reminder;\n\t\tconst isReminderSeen = nextReminder ? baby.seenReminders.includes(nextReminder.id) : false;\n\n\t\treturn (\n\t\t\t<tr id={`baby_${babyId}`} data-id={babyId}>\n\t\t\t\t<td className=\"name_td\">{baby.name}</td>\n\t\t\t\t<td className=\"birth_td\">{baby.birthdate.toDateString()}</td>\n\t\t\t\t<ReminderCol reminder={nextReminder} isSeen={isReminderSeen} babyId={babyId} onClick={() => onReminderClick(nextReminder.id, babyId)} />\n\t\t\t</tr>\n\t\t);\n\t}\n}","import { ActionCreator, Action, AnyAction } from 'redux';\nimport { Baby } from '../interfaces';\n\nexport const ACTION_TYPES = {\n\tINIT_BABIES: 'INIT_BABIES',\n\tADD_REMINDER: 'ADD_REMINDER',\n\tREMOVE_REMINDER: 'REMOVE_REMIDNER'\n};\n\nexport const initBabies: ActionCreator<Action> = () => ({\n  type: ACTION_TYPES.INIT_BABIES\n});\n\ninterface BabyReminder {\n\tbabyId: number;\n\treminderId: number;\n}\nexport const addReminder = (payload: BabyReminder) => ({\n\ttype: ACTION_TYPES.ADD_REMINDER,\n\tpayload\n});\n\nexport const removeReminder = (payload: BabyReminder) => ({\n\ttype: ACTION_TYPES.REMOVE_REMINDER,\n\tpayload\n});","import React from 'react';\nimport { Baby, Reminder } from '../../interfaces';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button, Checkbox, FormControlLabel } from '@material-ui/core'\n\ninterface Props {\n\t// From container\n\treminder: Reminder;\n\tbaby: Baby;\n\tupdateReminder: (isSeen: boolean) => void;\n\t// ownProps\n\tonClose: () => void;\n\tisOpen: boolean;\n};\n\ninterface State {\n\tisSeen: boolean;\n}\n\nexport class EditBabyComponent extends React.Component<Props, State> {\t\n\tfields: {label: string, value: string | number}[];\n\t\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tconst { baby, reminder } = props;\n\n\t\tconst labels = [\n\t\t\t\"שם תינוק\",\n\t\t\t\"תאריך לידה\",\n\t\t\t\"גיל הופעת התזכורת (חודשים)\",\n\t\t\t\"שם תזכורת\"\n\t\t];\n\t\tconst values = [baby.name, baby.birthdate.toISOString().slice(0,10), reminder.months, reminder.name];\n\n\t\tthis.fields = values.map((value, i) => ({label: labels[i], value}))\n\n\t\tthis.state = {\n\t\t\tisSeen: baby.seenReminders.includes(reminder.id)\n\t\t}\n\t}\n\n\thandleSubmit = () => {\n\t\tconst isSeenChecked = this.state.isSeen;\n\t\tthis.props.updateReminder(isSeenChecked);\n\n\t\t// Return to home.\n\t\tthis.closeModal();\n\t}\n\n\tcloseModal = () => {\n\t\tthis.props.onClose();\n\t}\n\n\trender() {\n\t\tconst { isOpen, baby, reminder } = this.props;\n\t\tconst { isSeen } = this.state;\n\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\topen={isOpen}\n\t\t\t\tonClose={this.closeModal}\n\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t >\n        <DialogTitle id=\"form-dialog-title\">תינוק {baby.name} - תזכורת {reminder.name}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            כאן ניתן לערוך פרטי התזכורת. כרגע הכוונה היא רק ל'סיימתי עם התזכורת'.\n          </DialogContentText>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fields.map(f => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\tlabel={f.label}\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={f.value}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.87)'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tchecked={isSeen}\n\t\t\t\t\t\t\tonChange={({target}) => this.setState({isSeen: target.checked})}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"סיימתי עם התזכורת\"\n\t\t\t\t/>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.closeModal} color=\"secondary\">\n            בטל\n          </Button>\n          <Button onClick={this.handleSubmit} color=\"primary\">\n            עדכן\n          </Button>\n        </DialogActions>\n      </Dialog>\n\t\t\t);\n\t}\n}","import { connect } from 'react-redux';\nimport { addReminder, removeReminder } from '../../store/actions';\nimport { EditBabyComponent } from './component';\n\ninterface Props {\n\tpickedBabyReminder: {\n\t\tbabyId: number,\n\t\treminderId: number\n\t},\n\tisOpen: boolean;\n\tonClose: () => void;\n};\n\nconst mapStateToProps = (state, ownProps: Props) => ({\n\tbaby: state.baby[ownProps.pickedBabyReminder.babyId],\n\treminder: state.reminder[ownProps.pickedBabyReminder.reminderId]\n});\n\nconst mapDispatchToProps = (dispatch, ownProps: Props) => ({\n\tupdateReminder: (isSeen: boolean) => {\n\t\tconst {babyId, reminderId} = ownProps.pickedBabyReminder;\n\t\tconst payload = {\n\t\t\tbabyId,\n\t\t\treminderId\n\t\t};\n\n\t\tif (isSeen) {\n\t\t\tdispatch(addReminder(payload));\n\t\t} else {\n\t\t\tdispatch(removeReminder(payload));\n\t\t}\n\t}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBabyComponent)","import React from 'react';\nimport { Baby } from '../../interfaces';\nimport { BabyDataRow } from '../BabyDataRow';\nimport EditBabyContainer from '../EditBaby';\n\ninterface Props {\n\tbabies: Baby[];\n};\n\ninterface State {\n\tpickedBabyReminder: {\n\t\tbabyId: number,\n\t\treminderId: number\n\t} | null\n}\n\nexport class BabiesDataTableComponent extends React.Component<Props, State> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpickedBabyReminder: null\n\t\t};\n\t}\n\n\tonReminderChoose = (reminderId: number, babyId: number) => {\n\t\tthis.setState({pickedBabyReminder: {\n\t\t\treminderId,\n\t\t\tbabyId\n\t\t}});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"h-100 w-100\">>\n\t\t\t\t<div id=\"babies-table-wrapper\" className=\"h-100 overflow-auto col-12\">\n\t\t\t\t\t<table className=\"table-bordered h-100 w-100 table-hover text-right\" style={{fontSize: \"30px\"}}>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>שם</th>\n\t\t\t\t\t\t\t\t\t<th>תאריך לידה</th>\n\t\t\t\t\t\t\t\t\t<th className=\"table-danger\">תזכורת הבאה</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{this.props.babies.map((baby, babyId) => <BabyDataRow key={`BabyRow_${babyId}`} baby={baby} id={babyId} onReminderClick={this.onReminderChoose} />)}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t{this.state.pickedBabyReminder &&\n\t\t\t\t<EditBabyContainer isOpen={!!this.state.pickedBabyReminder} onClose={() => this.setState({pickedBabyReminder: null})} pickedBabyReminder={this.state.pickedBabyReminder} />}\n\t\t\t</div>\n\t\t);\n\t}\n}","import { connect } from 'react-redux';\nimport { BabiesDataTableComponent } from './component';\n\nconst mapStateToProps = (state) => ({\n\tbabies: state.baby\n});\n\nexport default connect(mapStateToProps)(BabiesDataTableComponent)","import React from 'react';\nimport './App.css';\nimport BabiesDataTableContainer from './components/BabiesDataTable';\nimport { Baby } from './interfaces';\nimport persistence from './utils/persistence';\n\nclass App extends React.Component<{}, {isEditForm: boolean}> {\n\t// No need of state as static.\n\tbabies: Baby[] = []\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tpersistence.initData();\n\t\tthis.babies = persistence.getBabies();\n\t}\n\n  render() {\n\t\treturn (\n    <div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1 className=\"h1 text-center pt-5\">תינוק תזכורת</h1>\n\t\t\t</header>\n\t\t\t<div className=\"container d-flex align-items-center body-content\">\n\t\t\t\t{\n\t\t\t\t\t// Placeholder for router...\n\t\t\t\t\t<BabiesDataTableContainer />\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<footer className=\"text-center blockquote-footer\" dir=\"ltr\">\n\t\t\t\tMade by Waffle\n\t\t\t</footer>\n    </div>\n  \t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from 'redux';\nimport { ACTION_TYPES } from './actions';\nimport { Baby } from '../interfaces';\n\nconst DEFAULT_STATE: Baby[] = [];\n\nexport default function babyReducer(state = DEFAULT_STATE, action: Action<string>) {\n\tconst { payload} = action as any;\n\tswitch(action.type) {\n\t\t// case (ACTION_TYPES.INIT_BABIES): {\n\t\t// \treturn persistence.getBabies();\n\t\t// }\n\t\tcase (ACTION_TYPES.ADD_REMINDER): {\n\t\t\treturn state.map((elm, i) => {\n\t\t\t\tif (i !== payload.babyId) return elm;\n\n\t\t\t\treturn {\n\t\t\t\t\t...elm,\n\t\t\t\t\tseenReminders: [...elm.seenReminders, payload.reminderId]\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tcase (ACTION_TYPES.REMOVE_REMINDER): {\n\t\t\treturn state.map((elm, i) => {\n\t\t\t\tif (i !== payload.babyId) return elm;\n\n\t\t\t\treturn {\n\t\t\t\t\t...elm,\n\t\t\t\t\tseenReminders: elm.seenReminders.filter((elm) => elm !== payload.reminderId)\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\t\n}","import logger from 'redux-logger';\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport babyReducer from \"./reducer\";\nimport persistence from \"../utils/persistence\";\n\nconst reducer = combineReducers({\n\tbaby: babyReducer,\n\t// boilerplate for real reminder reducer\n\treminder: (state = []) => state \n})\n\nconst persistedState = {\n\tbaby: persistence.getBabies(),\n\treminder: persistence.getReminders()\n};\n\nconst store = createStore(reducer, persistedState, applyMiddleware(logger));\n\nstore.subscribe(() => {\n\tpersistence.saveBabies(store.getState().baby);\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}