{"version":3,"sources":["app/utils/persistence.ts","app/utils/util.ts","app/utils/constants.ts","app/components/Reminder.tsx","app/components/BabyDataRow.tsx","app/pages/BabiesDataPage.tsx","app/pages/EditBabyPage.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["PERSISTENCE_CODES","BABIES","REMINDERS","Storage","prototype","setObj","key","obj","this","setItem","JSON","stringify","getObj","parse","getItem","e","initData","localStorage","prompt","alert","babiesWithReminders","babiesJSON","map","b","name","birthdate","util","stringToDate","seenReminders","remindersJSON","getBabies","babies","length","Date","getReminders","reminders","r","id","persistence","paramsObjToUrl","params","Object","keys","paramKey","join","getAgeInMonths","birthday","today","getFullYear","getMonth","getReminderForAge","ageInMonths","indexOfSmallestRangeReminder","reduce","accum","currReminder","i","smallestRange","Math","min","months","getJsonFromUrl","url","window","location","search","query","substr","result","split","forEach","part","item","nextURIComponent","decodeURIComponent","parseInt","isNaN","TypeError","getBabiesWithRemindersObj","baby","reminderId","str","sep","parts","day","toFixed","month","year","EDIT_FORM_URL","ReminderCol","onReminderClick","paramsStr","props","reminder","babyId","href","isSeen","onClick","className","data-id","React","Component","BabyDataRow","nextReminder","isReminderSeen","includes","toDateString","BabiesDataPage","style","fontSize","EditBabyPage","handleSubmit","event","preventDefault","currBabiesData","isSeenChecked","state","currSeenReminders","indexInSeenReminders","findIndex","isReminderExistInCurrData","push","splice","goHome","Error","history","back","onSubmit","htmlFor","type","value","readOnly","toISOString","slice","aria-describedby","checked","onChange","target","setState","App","isEditForm","pathname","dir","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d6753d6.chunk.js","sourcesContent":["import { Baby, Reminder } from \"../interfaces\"\r\nimport util from './util';\r\nimport babiesJSON from '../resources/babies.json'\r\nimport remindersJSON from '../resources/reminders.json'\r\n\r\nexport const PERSISTENCE_CODES = {\r\n\tBABIES: 'BABIES',\r\n\tREMINDERS: 'REMINDERS'\r\n}\r\n\r\nStorage.prototype.setObj = function(key: string, obj: Reminder | Baby) {\r\n\treturn this.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nStorage.prototype.getObj = function(key: string) {\r\n\ttry {\r\n\t\treturn JSON.parse(this.getItem(key) as string);\r\n\t}  catch(e) {\r\n\t\t// getItem didn't return string\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction initData() {\r\n\tconst isDataExists = !!localStorage.getObj(PERSISTENCE_CODES.REMINDERS);\r\n\r\n\tif (isDataExists) return;\r\n\r\n\t// Password protection (only if data doesn't exsists)\r\n\tvar person = prompt(\"שם משתמש:\", \"\");\r\n\tif (person !== \"אורי\") {\r\n\t\talert('אין לך גישה לאפליקציה. \\nרענן לניסיון נוסף');\r\n\t\treturn;\r\n\t} else {\r\n\t\talert('ברוכה הבאה! להבא לא תצטרכי להקיש הסיסמה :)')\r\n\t}\r\n\r\n\tconst babiesWithReminders = babiesJSON.map(b => ({\r\n\t\tname: b.name,\r\n\t\tbirthdate: util.stringToDate(b.birthdate),\r\n\t\tseenReminders: []\r\n\t}));\r\n\r\n\tlocalStorage.setObj(PERSISTENCE_CODES.REMINDERS, remindersJSON);\r\n\tlocalStorage.setObj(PERSISTENCE_CODES.BABIES, babiesWithReminders);\r\n}\r\n\r\nfunction getReminders(): Reminder[] {\r\n\tconst reminders: any[] = localStorage.getObj(PERSISTENCE_CODES.REMINDERS);\r\n\r\n\tif (!reminders || !reminders.length) return [];\r\n\r\n\treturn reminders.map((r, id) => ({...r, id}))\r\n}\r\n\r\nfunction getBabies(): Baby[] {\r\n\tconst babies: any[] = localStorage.getObj(PERSISTENCE_CODES.BABIES);\r\n\t\r\n\tif (!babies || !babies.length) return [];\r\n\t\r\n\treturn babies.map((b) => ({...b, birthdate: new Date(b.birthdate)}));\r\n}\r\n\r\nexport default {\r\n\tinitData,\r\n\tgetBabies,\r\n\tgetReminders,\r\n\tpersistence: localStorage\r\n};","import { Reminder, Baby, BabyWithRemindersObj } from \"../interfaces\";\r\nimport persistence from \"./persistence\";\r\n\r\nexport function getJsonFromUrl(url?: string) {\r\n  if(!url) url = window.location.search;\r\n  var query = url.substr(1);\r\n  var result: any = {};\r\n  query.split(\"&\").forEach(function(part: string) {\r\n\t\tvar item = part.split(\"=\");\r\n\t\tconst nextURIComponent = decodeURIComponent(item[1]);\r\n\t\t// Try to parse to int.\r\n\t\ttry {\r\n\t\t\tresult[item[0]] = parseInt(nextURIComponent);\r\n\t\t\tif (isNaN(result[item[0]])) throw new TypeError('NaN');\r\n\t\t} catch(e) {\r\n\t\t\tresult[item[0]] = nextURIComponent;\r\n\t\t}\r\n  });\r\n  return result;\r\n}\r\n\r\nexport function paramsObjToUrl(params: any) {\r\n\treturn (Object.keys(params).map((paramKey) => `${paramKey}=${params[paramKey]}`).join('&'));\r\n}\r\n\r\nexport const getAgeInMonths = (birthday: Date) => {\r\n\tconst today = new Date();\r\n\r\n\tconst years = today.getFullYear() - birthday.getFullYear();\r\n\tconst months = today.getMonth() - birthday.getMonth();\r\n\r\n\tconst ageInMonths = years * 12 + months;\r\n\r\n\treturn (ageInMonths);\r\n}\r\n\r\nexport const getReminderForAge = (ageInMonths: number) => {\r\n\tconst reminders: Reminder[] = persistence.getReminders();\r\n\tlet indexOfSmallestRangeReminder = -1;\r\n\r\n\treminders.reduce((accum, currReminder: Reminder, i) => {\r\n\t\t// Notice we want to get the min range from future reminders.\r\n\t\t// At this point, we don't care about past reminders.\r\n\t\tconst smallestRange = Math.min(accum, currReminder.months - ageInMonths);\r\n\t\tif (smallestRange >= 0 && smallestRange < accum) {\r\n\t\t\tindexOfSmallestRangeReminder = i;\r\n\t\t\treturn (smallestRange);\r\n\t\t}\r\n\r\n\t\treturn (accum)\r\n\r\n\t}, Math.min());\r\n\r\n\tif (indexOfSmallestRangeReminder < 0) {\r\n\t\t// Can't found future event\r\n\t\treturn (null)\r\n\t}\r\n\r\n\treturn reminders[indexOfSmallestRangeReminder];\r\n}\r\n\r\nexport function getBabiesWithRemindersObj(): BabyWithRemindersObj[] {\r\n\tconst babies: Baby[] = persistence.getBabies();\r\n\tconst reminders: Reminder[] = persistence.getReminders();\r\n\r\n\tif (!babies || !babies.length) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\treturn babies.map(baby => ({\r\n\t\t...baby,\r\n\t\tseenReminders: baby.seenReminders.map(reminderId => reminders[reminderId])\r\n\t}));\r\n}\r\n\r\nconst stringToDate = (str: string, sep: string = '.'): Date => {\r\n\tconst parts = str.split(sep);\r\n\tconst day = parseInt(parts[1]).toFixed(2);\r\n\tconst month = parseInt(parts[1]).toFixed(2);\r\n\tconst year = '20' + parts[2];\r\n\r\n\treturn new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\r\n}\r\n\r\n\r\nexport default {\r\n\tgetJsonFromUrl,\r\n\tparamsObjToUrl,\r\n\tgetAgeInMonths,\r\n\tgetReminderForAge,\r\n\tgetBabiesWithRemindersObj,\r\n\tstringToDate\r\n}","export const EDIT_FORM_URL = 'editBabyReminder.html';\r\nexport const HOME_URL = 'index.html';","import React from 'react';\r\nimport { Reminder } from '../interfaces';\r\nimport { paramsObjToUrl } from '../utils/util';\r\nimport { EDIT_FORM_URL } from '../utils/constants';\r\n\r\ninterface Props {\r\n\treminder: Reminder;\r\n\tisSeen: boolean;\r\n\tbabyId: number;\r\n};\r\n\r\nexport class ReminderCol extends React.Component<Props, {}> {\r\n\tonReminderClick = () => {\r\n\t\tconst params = {\r\n\t\t\treminderId: this.props.reminder.id,\r\n\t\t\tbabyId: this.props.babyId\r\n\t\t};\r\n\t\r\n\t\tconst paramsStr = paramsObjToUrl(params);\r\n\t\r\n\t\twindow.location.href = `${EDIT_FORM_URL}?${paramsStr}`;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {reminder, isSeen} = this.props;\r\n\t\tconst isReminder = !!reminder;\r\n\r\n\t\treturn (\r\n\t\t\tisReminder ? \r\n\t\t\t<td onClick={this.onReminderClick} className={`reminder_td ${isSeen ? 'seen' : ''}`} data-id={reminder.id}>\r\n\t\t\t\t{reminder.name}\r\n\t\t\t</td> :\r\n\t\t\t<td onClick={() => alert('אין כאן תזכורת הניתנת לעריכה :)')}>\r\n\t\t\t\t-\r\n\t\t\t</td>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { Reminder, Baby } from '../interfaces';\r\nimport { getReminderForAge, getAgeInMonths } from '../utils/util';\r\nimport { ReminderCol } from '../components/Reminder';\r\n\r\ninterface Props {\r\n\tbaby: Baby;\r\n\tid: number;\r\n};\r\n\r\n\r\nexport class BabyDataRow extends React.Component<Props, {}> {\r\n\r\n\trender() {\r\n\t\tconst { baby, id: babyId } = this.props;\r\n\t\tconst ageInMonths = getAgeInMonths(baby.birthdate);\r\n\t\tconst nextReminder = getReminderForAge(ageInMonths) as Reminder;\r\n\t\tconst isReminderSeen = nextReminder ? baby.seenReminders.includes(nextReminder.id) : false;\r\n\r\n\t\treturn (\r\n\t\t\t<tr id={`baby_${babyId}`} data-id={babyId}>\r\n\t\t\t\t<td className=\"name_td\">{baby.name}</td>\r\n\t\t\t\t<td className=\"birth_td\">{baby.birthdate.toDateString()}</td>\r\n\t\t\t\t<ReminderCol reminder={nextReminder} isSeen={isReminderSeen} babyId={babyId} />\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { Baby } from '../interfaces';\r\nimport { BabyDataRow } from '../components/BabyDataRow';\r\n\r\ninterface Props {\r\n\tbabies: Baby[];\r\n};\r\n\r\nexport class BabiesDataPage extends React.Component<Props, {}> {\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"babies-table-wrapper\" className=\"h-100 overflow-auto col-12\">\r\n\t\t\t\t<table className=\"table-bordered h-100 w-100 table-hover text-right\" style={{fontSize: \"30px\"}}>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>שם</th>\r\n\t\t\t\t\t\t\t\t<th>תאריך לידה</th>\r\n\t\t\t\t\t\t\t\t<th className=\"table-danger\">תזכורת הבאה</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{this.props.babies.map((baby, babyId) => <BabyDataRow key={`BabyRow_${babyId}`} baby={baby} id={babyId} />)}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { FormEvent } from 'react';\r\nimport util from '../utils/util';\r\nimport persistence, { PERSISTENCE_CODES } from '../utils/persistence';\r\nimport { Baby, Reminder } from '../interfaces';\r\nimport { HOME_URL } from '../utils/constants';\r\n\r\ninterface Props {\r\n};\r\n\r\ninterface State {\r\n\tisSeen: boolean;\r\n}\r\n\r\nexport class EditBabyPage extends React.Component<Props, State> {\r\n\tbaby!: Baby;\r\n\tbabyId!: number;\r\n\treminder!: Reminder;\r\n\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tlet params: {\r\n\t\t\treminderId: number;\r\n\t\t\tbabyId: number;\r\n\t\t};\r\n\r\n\t\ttry {\t\r\n\t\t\tparams = util.getJsonFromUrl();\r\n\t\t\tif (Object.keys(params).length < Object.keys(PERSISTENCE_CODES).length) {\r\n\t\t\t\tthrow new Error('not enough params');\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\talert('יש כאן באג\\nאתה מוחזר לעמוד הקודם\\n\\n' + e);\r\n\t\t\twindow.history.back();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { reminderId , babyId } = params;\r\n\t\t\r\n\t\tthis.reminder = persistence.getReminders()[reminderId];\r\n\t\tthis.baby = persistence.getBabies()[babyId];\r\n\t\tthis.babyId = babyId;\r\n\t\tconst { seenReminders } = this.baby;\r\n\r\n\t\tthis.state = {\r\n\t\t\tisSeen: seenReminders.includes(this.reminder.id)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (event: FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst currBabiesData: Baby[] = persistence.persistence.getObj(PERSISTENCE_CODES.BABIES) || [];\r\n\t\tconst isSeenChecked = this.state.isSeen;\r\n\t\tconst currSeenReminders = currBabiesData[this.babyId].seenReminders;\r\n\t\tconst reminderId = this.reminder.id;\r\n\t\r\n\t\tconst indexInSeenReminders = currSeenReminders.findIndex((r) => r === reminderId);\r\n\t\tconst isReminderExistInCurrData =  indexInSeenReminders > -1;\r\n\r\n\t\t// Update by isSeenChecked\r\n\t\tif (isSeenChecked && !isReminderExistInCurrData) {\r\n\t\t\t// Add to seenReminders (only if not exists already).\r\n\t\t\tcurrSeenReminders.push(reminderId);\r\n\t\t} else if (!isSeenChecked && isReminderExistInCurrData) {\r\n\t\t\t// Remove from seenReminders (only if found). Remove only this one element\r\n\t\t\tcurrSeenReminders.splice(indexInSeenReminders, 1);\r\n\t\t}\r\n\r\n\t\t// Note: even though arr updated on data, we still have to call setObj as\r\n\t\t// localStorage is basically string-based!!\r\n\t\tlocalStorage.setObj(PERSISTENCE_CODES.BABIES, currBabiesData);\r\n\t\t// Return to home.\r\n\t\tthis.goHome();\r\n\t}\r\n\r\n\tgoHome() {\r\n\t\twindow.location.href = HOME_URL;\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {baby, reminder } = this;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"mx-auto text-right\">\r\n\t\t\t\t<form className=\"text-right mb-2\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-group text-right text-info\">\r\n\t\t\t\t\t\t<label htmlFor=\"baby-name\">שם תינוק</label>\r\n\t\t\t\t\t\t<input type=\"text\" value={baby.name} readOnly className=\"form-control\" id=\"baby-name\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-right text-info\">\r\n\t\t\t\t\t\t<label htmlFor=\"baby-birthday\">תאריך לידה</label>\r\n\t\t\t\t\t\t<input type=\"date\" readOnly value={baby.birthdate.toISOString().slice(0,10)} className=\"form-control\" id=\"baby-birthday\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-right text-info\">\r\n\t\t\t\t\t\t<label htmlFor=\"reminder-months\">גיל הופעת תזכורת (חודשים)</label>\r\n\t\t\t\t\t\t<input type=\"text\" readOnly value={reminder.months} className=\"form-control\" id=\"reminder-months\" aria-describedby=\"reminder-months-help\"/>\r\n\t\t\t\t\t\t<small id=\"reminder-months-help\" className=\"form-text text-muted\">בעתיד יהיה ניתן לערוך שדה זה.</small>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group text-right text-info\">\r\n\t\t\t\t\t\t<label htmlFor=\"reminder-name\">שם תזכורת</label>\r\n\t\t\t\t\t\t<input type=\"text\" readOnly value={reminder.name} className=\"form-control\" id=\"reminder-name\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-check text-right text-info form-check\">\r\n\t\t\t\t\t\t<input checked={this.state.isSeen} onChange={({target}) => this.setState({isSeen: target.checked})} type=\"checkbox\" className=\"form-check-input\" id=\"reminder-seen\"/>\r\n\t\t\t\t\t\t<label className=\"form-check-label mr-3\" htmlFor=\"reminder-seen\">סיימתי עם התזכורת</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button id=\"submit-btm\" type=\"submit\" className=\"btn btn-primary\">עדכן</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<button className=\"btn btn-warning\" onClick={this.goHome}>חזור לטבלה</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { BabiesDataPage } from './pages/BabiesDataPage';\r\nimport { EditBabyPage } from './pages/EditBabyPage';\r\nimport { Baby } from './interfaces';\r\nimport { EDIT_FORM_URL } from './utils/constants';\r\nimport persistence from './utils/persistence';\r\n\r\nclass App extends React.Component<{}, {isEditForm: boolean}> {\r\n\t// No need of state as static.\r\n\tbabies: Baby[] = []\r\n\tisEditForm: boolean;\r\n\r\n\tconstructor(props: {}) {\r\n\t\tsuper(props);\r\n\t\tpersistence.initData();\r\n\t\tthis.babies = persistence.getBabies();\r\n\t\tthis.isEditForm = window.location.pathname.includes(EDIT_FORM_URL);\r\n\t}\r\n\r\n  render() {\r\n\t\treturn (\r\n    <div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<h1 className=\"h1 text-center pt-5\">תינוק תזכורת</h1>\r\n\t\t\t</header>\r\n\t\t\t<div className=\"container d-flex align-items-center body-content\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.isEditForm ?\r\n\t\t\t\t\t<EditBabyPage /> :\r\n\t\t\t\t\t<BabiesDataPage babies={this.babies}/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<footer className=\"text-center blockquote-footer\" dir=\"ltr\">\r\n\t\t\t\tMade by Waffle\r\n\t\t\t</footer>\r\n    </div>\r\n  \t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}